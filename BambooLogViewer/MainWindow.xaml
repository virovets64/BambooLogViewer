<Window x:Class="BambooLogViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:view="clr-namespace:BambooLogViewer.View"
        xmlns:data="clr-namespace:BambooLogViewer.DataModel"  
        Title="MainWindow" Height="350" Width="525">
  <Window.Resources>
    <view:MessageColorConverter x:Key="messageColorConverter"></view:MessageColorConverter>
    <!-- See https://leecampbell.com/2009/01/14/horizontal-stretch-on-treeviewitems/ -->
    <Style TargetType="TreeViewItem"
       BasedOn="{StaticResource {x:Type TreeViewItem}}">
      <Setter Property="HorizontalContentAlignment"
          Value="Stretch" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TreeViewItem">
            <StackPanel>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"
                                MinWidth="19" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          ClickMode="Press"
                          Name="Expander">
                  <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                      <Setter Property="UIElement.Focusable"
                          Value="false" />
                      <Setter Property="FrameworkElement.Width"
                          Value="16" />
                      <Setter Property="FrameworkElement.Height"
                          Value="16" />
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ToggleButton">
                            <Border Padding="5,5,5,5"
                                Background="#00FFFFFF"
                                Width="16"
                                Height="16">
                              <Path Fill="#00FFFFFF"
                                Stroke="#FF989898"
                                Name="ExpandPath">
                                <Path.Data>
                                  <PathGeometry Figures="M0,0L0,6L6,0z" />
                                </Path.Data>
                                <Path.RenderTransform>
                                  <RotateTransform Angle="135"
                                               CenterX="3"
                                               CenterY="3" />
                                </Path.RenderTransform>
                              </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver"
                                   Value="True">
                                <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF1BBBFA" />
                                <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#00FFFFFF" />
                              </Trigger>
                              <Trigger Property="ToggleButton.IsChecked"
                                   Value="True">
                                <Setter TargetName="ExpandPath"
                                    Property="UIElement.RenderTransform">
                                  <Setter.Value>
                                    <RotateTransform Angle="180"
                                                 CenterX="3"
                                                 CenterY="3" />
                                  </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#FF595959" />
                                <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF262626" />
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </ToggleButton.Style>
                </ToggleButton>
                <Border x:Name="Bd"
                    HorizontalAlignment="Stretch"
                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Panel.Background}"
                    SnapsToDevicePixels="True"
                    Grid.Column="1">
                  <ContentPresenter x:Name="PART_Header"
                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
                <ItemsPresenter x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.Row="1" />
              </Grid>
            </StackPanel>
            <ControlTemplate.Triggers>
              <Trigger Property="TreeViewItem.IsExpanded"
                   Value="False">
                <Setter TargetName="ItemsHost"
                    Property="UIElement.Visibility"
                    Value="Collapsed" />
              </Trigger>
              <Trigger Property="ItemsControl.HasItems"
                   Value="False">
                <Setter TargetName="Expander"
                    Property="UIElement.Visibility"
                    Value="Hidden" />
              </Trigger>
              <Trigger Property="TreeViewItem.IsSelected"
                   Value="True">
                <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="TreeViewItem.IsSelected"
                         Value="True" />
                  <Condition Property="Selector.IsSelectionActive"
                         Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
              </MultiTrigger>
              <Trigger Property="UIElement.IsEnabled"
                   Value="False">
                <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  <Grid>
    <TreeView Name="trvLog">
      <TreeView.Resources>
        <HierarchicalDataTemplate DataType="{x:Type data:Build}" ItemsSource="{Binding Tasks}">
          <StackPanel Orientation="Vertical" Background="#FFE6F9EC" Margin="1">
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="Build: " />
              <TextBlock Text="{Binding Id}" FontWeight="Bold"/>
              <TextBlock Text=" on " />
              <TextBlock Text="{Binding Agent}" FontWeight="Bold"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Name}" />
            </StackPanel>
          </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type data:PlanTask}" ItemsSource="{Binding Records}">
          <StackPanel Orientation="Horizontal" Background="#FFEAF3F9">
            <TextBlock Text="Task: " />
            <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
          </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type data:VSProject}" ItemsSource="{Binding Records}">
          <StackPanel Orientation="Horizontal" Background="#FFF2F7E1">
            <TextBlock Text="{Binding Name}" />
          </StackPanel>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type data:Record}">
          <StackPanel Orientation="Horizontal" Background="{Binding Kind, Converter={StaticResource messageColorConverter}}">
            <TextBlock Text="{Binding Message}"/>
          </StackPanel>
        </DataTemplate>
      </TreeView.Resources>
    </TreeView>
  </Grid>

</Window>
